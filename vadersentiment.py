# -*- coding: utf-8 -*-
"""VaderSentiment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hBqdo1oiHjPLHNxWrZwkwvNrm0DhnQxs
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

plt.style.use('ggplot')

import nltk

# Read in data
df = pd.read_csv('/content/Netflix Rotton Tomato Movie Rankings.csv')
print(df.shape)
df = df.head(500)
print(df.shape)

df.head()

from nltk.sentiment import SentimentIntensityAnalyzer
from tqdm.notebook import tqdm

sia = SentimentIntensityAnalyzer()

# Run the polarity score on the entire dataset
res = {}
for i, row in tqdm(df.iterrows(), total=len(df)):
    text = row['Critic Reviews']
    myid = row['Movie Names']
    res[myid] = sia.polarity_scores(text)

vaders.head()

ax = sns.barplot(data=vaders, x='Critic Reviews', y='compound')
ax.set_title('Compund Score by Amazon Star Review')
plt.show()

fig, axs = plt.subplots(1, 3, figsize=(12, 3))
sns.barplot(data=vaders, x='Ratings', y='pos', ax=axs[0])
sns.barplot(data=vaders, x='Ratings', y='neu', ax=axs[1])
sns.barplot(data=vaders, x='Ratings', y='neg', ax=axs[2])
axs[0].set_title('Positive')
axs[1].set_title('Neutral')
axs[2].set_title('Negative')
plt.tight_layout()
plt.show()